// Mocks generated by Mockito 5.4.5 from annotations
// in hotelmangement/test/features/hotel_management/domain/usecases/food/get_food_images_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:hotelmangement/core/error/failure.dart' as _i5;
import 'package:hotelmangement/features/hotel_management/domain/entities/food.dart'
    as _i6;
import 'package:hotelmangement/features/hotel_management/domain/entities/food_image.dart'
    as _i7;
import 'package:hotelmangement/features/hotel_management/domain/repositories/hotel_food_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [HotelFoodRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHotelFoodRepository extends _i1.Mock
    implements _i3.HotelFoodRepository {
  MockHotelFoodRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Food>> createFood({
    required String? hotelId,
    required String? name,
    required double? price,
    required bool? available,
    required String? type,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createFood, [], {
              #hotelId: hotelId,
              #name: name,
              #price: price,
              #available: available,
              #type: type,
            }),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Food>>.value(
              _FakeEither_0<_i5.Failure, _i6.Food>(
                this,
                Invocation.method(#createFood, [], {
                  #hotelId: hotelId,
                  #name: name,
                  #price: price,
                  #available: available,
                  #type: type,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i6.Food>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.Food>> updateFood({
    required String? foodId,
    String? name,
    double? price,
    bool? available,
    String? type,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#updateFood, [], {
              #foodId: foodId,
              #name: name,
              #price: price,
              #available: available,
              #type: type,
            }),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.Food>>.value(
              _FakeEither_0<_i5.Failure, _i6.Food>(
                this,
                Invocation.method(#updateFood, [], {
                  #foodId: foodId,
                  #name: name,
                  #price: price,
                  #available: available,
                  #type: type,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i6.Food>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteFood({
    required String? foodId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#deleteFood, [], {#foodId: foodId}),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
              _FakeEither_0<_i5.Failure, void>(
                this,
                Invocation.method(#deleteFood, [], {#foodId: foodId}),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.Food>>> getFoods({
    required String? hotelId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getFoods, [], {#hotelId: hotelId}),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i6.Food>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i6.Food>>(
                    this,
                    Invocation.method(#getFoods, [], {#hotelId: hotelId}),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i6.Food>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i7.FoodImage>> addFoodImage(
    String? foodId,
    String? localImagePath,
    String? remoteImageSaveName,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#addFoodImage, [
              foodId,
              localImagePath,
              remoteImageSaveName,
            ]),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, _i7.FoodImage>>.value(
                  _FakeEither_0<_i5.Failure, _i7.FoodImage>(
                    this,
                    Invocation.method(#addFoodImage, [
                      foodId,
                      localImagePath,
                      remoteImageSaveName,
                    ]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, _i7.FoodImage>>);

  @override
  _i4.Future<bool> isImageExists(String? imageId, String? foodId) =>
      (super.noSuchMethod(
            Invocation.method(#isImageExists, [imageId, foodId]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i7.FoodImage>>> getFoodImages(
    String? foodId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getFoodImages, [foodId]),
            returnValue:
                _i4.Future<_i2.Either<_i5.Failure, List<_i7.FoodImage>>>.value(
                  _FakeEither_0<_i5.Failure, List<_i7.FoodImage>>(
                    this,
                    Invocation.method(#getFoodImages, [foodId]),
                  ),
                ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, List<_i7.FoodImage>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteFoodImage(
    String? imageId,
    String? foodId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#deleteFoodImage, [imageId, foodId]),
            returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
              _FakeEither_0<_i5.Failure, void>(
                this,
                Invocation.method(#deleteFoodImage, [imageId, foodId]),
              ),
            ),
          )
          as _i4.Future<_i2.Either<_i5.Failure, void>>);
}
